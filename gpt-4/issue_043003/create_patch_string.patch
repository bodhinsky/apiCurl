diff --git a/src/apicurl/fetchUserCollection.py b/src/apicurl/fetchUserCollection.py
index 12345ab..67890cd 100644
--- a/src/apicurl/fetchUserCollection.py
+++ b/src/apicurl/fetchUserCollection.py
@@ -1,2 +1,10 @@
+import pandas as pd
+import matplotlib.pyplot as plt
+
 from importCredentials import getUserCredentials
 import requests
 
@@ -4,5 +4,13 @@
 def get_user_collection(page=1):
 
     user_name, user_token = getUserCredentials(service='Discogs')
 
     headers = {
         'Authorization': f'Discogs token={user_token}',
         'User-Agent': 'DiscogsCollectionExporter/1.0'
     }
     url = f'https://api.discogs.com/users/{user_name}/collection/folders/0/releases?page={page}'
 
     try:
         response = requests.get(url, headers=headers)
         response.raise_for_status()  # Raise an exception for bad status codes
         collection_data = response.json()
+        # New visualization function
+        visualize_collection_data(collection_data)
 
@@ -26,6 +26,14 @@
         print(f"Error fetching collection: {e}")
         return [], None
 
+def visualize_collection_data(data):
+    df = pd.DataFrame(data['releases'])
+    # Assuming 'year' is a sensible attribute to graph. This can change based on actual data structure.
+    year_count = df['year'].value_counts().sort_index()
+    plt.figure(figsize=(10,6))
+    plt.bar(year_count.index, year_count.values)
+    plt.xlabel('Year')
+    plt.ylabel('Number of Items')
+    plt.title('Collection Items by Year')
+    plt.show()
+
 def fetch_all_collection_pages():
     all_releases = []
     next_page = True
     page_number = 1
     
     while next_page:
-        releases, next_page_url = get_user_collection()
+        releases, next_page_url = get_user_collection(page=page_number)
         all_releases.extend(releases)
         next_page = next_page_url
         page_number += 1
     
+    visualize_collection_data({'releases': all_releases})
     return all_releases

